# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1
fullnameOverride: mm-backend

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: money-manager-backend
  tag: 1.1.0
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 8081 # Service port accessible from outside (only in k8s cluster)
  targetPort: 8080 # Container port

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: mm.backend.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: mm-secret-tls
      hosts:
        - mm.backend.com

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /api/version
    port: 8080
readinessProbe:
  httpGet:
    path: /api/version
    port: 8080

#This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

env:
  - name: PORT
    value: "8080"
  - name: SPRING_DATASOURCE_USERNAME
    valueFrom:
      secretKeyRef:
        name: mm-secrets
        key: postgres-user
  - name: SPRING_DATASOURCE_PASSWORD
    valueFrom:
      secretKeyRef:
        name: mm-secrets
        key: postgres-password
  - name: POSTGRES_DB
    valueFrom:
      secretKeyRef:
        name: mm-secrets
        key: postgres-db
  - name: GOOGLE_CLIENT_ID
    valueFrom:
      secretKeyRef:
        name: mm-secrets
        key: google-client-id
  - name: GOOGLE_CLIENT_SECRET
    valueFrom:
      secretKeyRef:
        name: mm-secrets
        key: google-client-secret
  - name: VK_CLIENT_ID
    valueFrom:
      secretKeyRef:
        name: mm-secrets
        key: vk-client-id
  - name: VK_CLIENT_SECRET
    valueFrom:
      secretKeyRef:
        name: mm-secrets
        key: vk-client-secret
  - name: POSTGRES_HOST
    valueFrom:
      configMapKeyRef:
        name: mm-configmap
        key: postgres-host
  - name: TOKEN_EXPIRATION_PERIOD
    valueFrom:
      configMapKeyRef:
        name: mm-configmap
        key: token-expiration-period
  - name: ALLOWED_ORIGINS
    valueFrom:
      configMapKeyRef:
        name: mm-configmap
        key: allowed-origins
  - name: SPRING_DATASOURCE_URL
    value: jdbc:postgresql://$(POSTGRES_HOST)/$(POSTGRES_DB) # Use environment variables declared above
