apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "mm-pg-chart.fullname" . }}
  labels:
    {{- include "mm-pg-chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  minReadySeconds: {{ .Values.minReadySeconds | default 10 }}
  selector:
    matchLabels:
      {{- include "mm-pg-chart.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "mm-pg-chart.fullname" . }}
  template:
    metadata:
      annotations:
        rollme: {{ randAlphaNum 5 | quote }} # To roll deployment on every helm upgrade
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "mm-pg-chart.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds | default 30 }}
      serviceAccountName: {{ include "mm-pg-chart.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "postgres:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: postgresql-db-disk
              mountPath: /data
          env:
            - name: PGDATA
              value: /data/pgdata
            {{- with .Values.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: postgresql-db-disk
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "local-storage"
      resources:
        requests:
          storage: 10Gi
